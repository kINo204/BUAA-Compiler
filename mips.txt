        # [compiler-generated](os-wrapper)
        jal     main
        move    $a0, $v0
        li      $v0, 17
        syscall

        # [compiler-generated](lib_io)
.text
putchar:
        sw	$fp, -4($sp)
        move	$fp, $sp
        addi	$sp, $sp, -4

        lb  $a0, 7($fp)
        li  $v0, 11
        syscall

        move	$sp, $fp
        lw	$fp, -4($sp)
        jr  $ra

        # [compiler-generated](lib_io)
putint:
        sw	$fp, -4($sp)
        move	$fp, $sp
        addi	$sp, $sp, -4

        lw  $a0, 4($fp)
        li  $v0, 1
        syscall

        move	$sp, $fp
        lw	$fp, -4($sp)
        jr  $ra

        # [compiler-generated](lib_io)
getchar:
        sw	$fp, -4($sp)
        move	$fp, $sp
        addi	$sp, $sp, -4

        li  $v0, 12
        syscall

        move	$sp, $fp
        lw	$fp, -4($sp)
        jr  $ra

        # [compiler-generated](lib_io)
getint:
        sw	$fp, -4($sp)
        move	$fp, $sp
        addi	$sp, $sp, -4

        li  $v0, 5
        syscall

        move	$sp, $fp
        lw	$fp, -4($sp)
        jr  $ra


	# global e_c_1[20]: i8 = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
.data
	e_c_1: .byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

	# define fun oerr:
.text
oerr:
	sw	$fp, -4($sp)
	move	$fp, $sp
	addi	$sp, $sp, -4

	# i_2 = alloc: i32

	# i_2: i32 = 0
	li	$v0, 0
	addi	$sp, $sp, -4
	sw	$v0, -8($fp)

	# $L0_for_cond:
$L0_for_cond:

	# %1: i32 = i_2
	lw	$v0, -8($fp)
	addi	$sp, $sp, -4
	sw	$v0, -12($fp)

	# %2 = lss: i32  %1, 20
	lw	$v0, -12($fp)
	li	$v1, 20
	slt	$v0, $v0, $v1
	addi	$sp, $sp, -4
	sw	$v0, -16($fp)

	# if false %2 goto  $L2_for_end
	lw	$v0, -16($fp)
	beq	$v0, $zero, $L2_for_end


	# %4: i32 = i_2
	lw	$v0, -8($fp)
	addi	$sp, $sp, -4
	sw	$v0, -20($fp)

	# %3: i8 = e_c_1[%4]
	la	$gp, e_c_1
	lw	$t9, -20($fp)
	addu	$gp, $gp, $t9
	lb	$v0, 0($gp)
	addi	$sp, $sp, -1
	sb	$v0, -21($fp)

	# if false %3 goto  $L3_if_end
	lb	$v0, -21($fp)
	beq	$v0, $zero, $L3_if_end


	# %6: i32 = i_2
	lw	$v0, -8($fp)
	addi	$sp, $sp, -7
	sw	$v0, -28($fp)

	# %5: i8 = e_c_1[%6]
	la	$gp, e_c_1
	lw	$t9, -28($fp)
	addu	$gp, $gp, $t9
	lb	$v0, 0($gp)
	addi	$sp, $sp, -1
	sb	$v0, -29($fp)

	# param  %5
	addi	$sp, $sp, -3
	lb	$a0, -29($fp)
	addi	$sp, $sp, -1
	sb	$a0, -33($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -29

	# $L3_if_end:
$L3_if_end:

	# $L1_for_motion:
$L1_for_motion:

	# %7: i32 = i_2
	lw	$v0, -8($fp)
	addi	$sp, $sp, -7
	sw	$v0, -36($fp)

	# %8 = add: i32  %7, 1
	lw	$v0, -36($fp)
	addi	$v0, $v0, 1
	addi	$sp, $sp, -4
	sw	$v0, -40($fp)

	# i_2: i32 = %8
	lw	$v0, -40($fp)
	sw	$v0, -8($fp)

	# goto  $L0_for_cond
	j	$L0_for_cond


	# $L2_for_end:
$L2_for_end:

	# ret
	move	$sp, $fp
	lw	$fp, -4($sp)
	jr	$ra


	# define fun side_effect:
side_effect:
	sw	$fp, -4($sp)
	move	$fp, $sp
	addi	$sp, $sp, -4

	# param  115
	li	$a0, 115
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  105
	li	$a0, 105
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  100
	li	$a0, 100
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  101
	li	$a0, 101
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  32
	li	$a0, 32
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  101
	li	$a0, 101
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  102
	li	$a0, 102
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  102
	li	$a0, 102
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  101
	li	$a0, 101
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  99
	li	$a0, 99
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  116
	li	$a0, 116
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  32
	li	$a0, 32
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# %1: i32 = num_4
	lw	$v0, 4($fp)
	addi	$sp, $sp, -4
	sw	$v0, -8($fp)

	# param  %1
	lw	$a0, -8($fp)
	addi	$sp, $sp, -4
	sw	$a0, -12($fp)

	# call: void  putint
	addi	$sp, $sp, -4
	sw	$ra, 0($sp)
	jal	putint

	lw	$ra, 0($sp)
	addi	$sp, $fp, -8

	# param  10
	li	$a0, 10
	addi	$sp, $sp, -1
	sb	$a0, -9($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -8

	# ret: i32  1
	li	$v0, 1
	move	$sp, $fp
	lw	$fp, -4($sp)
	jr	$ra


	# define fun main:
main:
	sw	$fp, -4($sp)
	move	$fp, $sp
	addi	$sp, $sp, -4

	# param  50
	li	$a0, 50
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  50
	li	$a0, 50
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  51
	li	$a0, 51
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  55
	li	$a0, 55
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  49
	li	$a0, 49
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  50
	li	$a0, 50
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  56
	li	$a0, 56
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  49
	li	$a0, 49
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# param  10
	li	$a0, 10
	addi	$sp, $sp, -1
	sb	$a0, -5($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -4

	# %1: i32 = 0
	li	$v0, 0
	addi	$sp, $sp, -4
	sw	$v0, -8($fp)

	# if false 1 goto  $L5_landexp_end
	li	$v0, 1
	beq	$v0, $zero, $L5_landexp_end


	# if false 0 goto  $L5_landexp_end
	li	$v0, 0
	beq	$v0, $zero, $L5_landexp_end


	# %1: i32 = 1
	li	$v0, 1
	sw	$v0, -8($fp)

	# goto  $L5_landexp_end
	j	$L5_landexp_end


	# $L5_landexp_end:
$L5_landexp_end:

	# if false %1 goto  $L4_if_end
	lw	$v0, -8($fp)
	beq	$v0, $zero, $L4_if_end


	# e_c_1[0]: i8 = 49
	li	$v0, 49
	la	$gp, e_c_1
	sb	$v0, 0($gp)

	# $L4_if_end:
$L4_if_end:

	# %2: i32 = 1
	li	$v0, 1
	addi	$sp, $sp, -4
	sw	$v0, -12($fp)

	# %3: i32 = 0
	li	$v0, 0
	addi	$sp, $sp, -4
	sw	$v0, -16($fp)

	# if false 1 goto  $L8_landexp_end
	li	$v0, 1
	beq	$v0, $zero, $L8_landexp_end


	# if false 0 goto  $L8_landexp_end
	li	$v0, 0
	beq	$v0, $zero, $L8_landexp_end


	# %3: i32 = 1
	li	$v0, 1
	sw	$v0, -16($fp)

	# goto  $L8_landexp_end
	j	$L8_landexp_end


	# $L8_landexp_end:
$L8_landexp_end:

	# if %3 goto  $L7_lorexp_end
	lw	$v0, -16($fp)
	bne	$v0, $zero, $L7_lorexp_end


	# %4: i32 = 0
	li	$v0, 0
	addi	$sp, $sp, -4
	sw	$v0, -20($fp)

	# if false 0 goto  $L9_landexp_end
	li	$v0, 0
	beq	$v0, $zero, $L9_landexp_end


	# if false 4 goto  $L9_landexp_end
	li	$v0, 4
	beq	$v0, $zero, $L9_landexp_end


	# %4: i32 = 1
	li	$v0, 1
	sw	$v0, -20($fp)

	# goto  $L9_landexp_end
	j	$L9_landexp_end


	# $L9_landexp_end:
$L9_landexp_end:

	# if %4 goto  $L7_lorexp_end
	lw	$v0, -20($fp)
	bne	$v0, $zero, $L7_lorexp_end


	# %2: i32 = 0
	li	$v0, 0
	sw	$v0, -12($fp)

	# goto  $L7_lorexp_end
	j	$L7_lorexp_end


	# $L7_lorexp_end:
$L7_lorexp_end:

	# if false %2 goto  $L6_if_end
	lw	$v0, -12($fp)
	beq	$v0, $zero, $L6_if_end


	# e_c_1[0]: i8 = 49
	li	$v0, 49
	la	$gp, e_c_1
	sb	$v0, 0($gp)

	# $L6_if_end:
$L6_if_end:

	# param  70
	li	$a0, 70
	addi	$sp, $sp, -1
	sb	$a0, -21($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -20

	# param  76
	li	$a0, 76
	addi	$sp, $sp, -1
	sb	$a0, -21($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -20

	# param  65
	li	$a0, 65
	addi	$sp, $sp, -1
	sb	$a0, -21($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -20

	# param  71
	li	$a0, 71
	addi	$sp, $sp, -1
	sb	$a0, -21($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -20

	# param  49
	li	$a0, 49
	addi	$sp, $sp, -1
	sb	$a0, -21($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -20

	# param  10
	li	$a0, 10
	addi	$sp, $sp, -1
	sb	$a0, -21($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -20

	# %5: i32 = 0
	li	$v0, 0
	addi	$sp, $sp, -4
	sw	$v0, -24($fp)

	# if false 0 goto  $L11_landexp_end
	li	$v0, 0
	beq	$v0, $zero, $L11_landexp_end


	# param  0
	li	$a0, 0
	addi	$sp, $sp, -4
	sw	$a0, -28($fp)

	# %6 = call: i32  side_effect
	addi	$sp, $sp, -4
	sw	$ra, 0($sp)
	jal	side_effect

	lw	$ra, 0($sp)
	addi	$sp, $sp, -4
	sw	$v0, -36($fp)
	addi	$sp, $fp, -24

	# if false %6 goto  $L11_landexp_end
	lw	$v0, -36($fp)
	beq	$v0, $zero, $L11_landexp_end


	# %5: i32 = 1
	li	$v0, 1
	sw	$v0, -24($fp)

	# goto  $L11_landexp_end
	j	$L11_landexp_end


	# $L11_landexp_end:
$L11_landexp_end:

	# if false %5 goto  $L10_if_end
	lw	$v0, -24($fp)
	beq	$v0, $zero, $L10_if_end


	# $L10_if_end:
$L10_if_end:

	# param  70
	li	$a0, 70
	addi	$sp, $sp, -1
	sb	$a0, -25($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -24

	# param  76
	li	$a0, 76
	addi	$sp, $sp, -1
	sb	$a0, -25($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -24

	# param  65
	li	$a0, 65
	addi	$sp, $sp, -1
	sb	$a0, -25($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -24

	# param  71
	li	$a0, 71
	addi	$sp, $sp, -1
	sb	$a0, -25($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -24

	# param  50
	li	$a0, 50
	addi	$sp, $sp, -1
	sb	$a0, -25($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -24

	# param  10
	li	$a0, 10
	addi	$sp, $sp, -1
	sb	$a0, -25($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -24

	# %7: i32 = 0
	li	$v0, 0
	addi	$sp, $sp, -4
	sw	$v0, -28($fp)

	# if false 1 goto  $L13_landexp_end
	li	$v0, 1
	beq	$v0, $zero, $L13_landexp_end


	# param  1
	li	$a0, 1
	addi	$sp, $sp, -4
	sw	$a0, -32($fp)

	# %8 = call: i32  side_effect
	addi	$sp, $sp, -4
	sw	$ra, 0($sp)
	jal	side_effect

	lw	$ra, 0($sp)
	addi	$sp, $sp, -4
	sw	$v0, -40($fp)
	addi	$sp, $fp, -28

	# if false %8 goto  $L13_landexp_end
	lw	$v0, -40($fp)
	beq	$v0, $zero, $L13_landexp_end


	# %7: i32 = 1
	li	$v0, 1
	sw	$v0, -28($fp)

	# goto  $L13_landexp_end
	j	$L13_landexp_end


	# $L13_landexp_end:
$L13_landexp_end:

	# if false %7 goto  $L12_if_end
	lw	$v0, -28($fp)
	beq	$v0, $zero, $L12_if_end


	# $L12_if_end:
$L12_if_end:

	# param  70
	li	$a0, 70
	addi	$sp, $sp, -1
	sb	$a0, -29($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -28

	# param  76
	li	$a0, 76
	addi	$sp, $sp, -1
	sb	$a0, -29($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -28

	# param  65
	li	$a0, 65
	addi	$sp, $sp, -1
	sb	$a0, -29($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -28

	# param  71
	li	$a0, 71
	addi	$sp, $sp, -1
	sb	$a0, -29($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -28

	# param  51
	li	$a0, 51
	addi	$sp, $sp, -1
	sb	$a0, -29($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -28

	# param  10
	li	$a0, 10
	addi	$sp, $sp, -1
	sb	$a0, -29($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -28

	# %9: i32 = 1
	li	$v0, 1
	addi	$sp, $sp, -4
	sw	$v0, -32($fp)

	# if 0 goto  $L15_lorexp_end
	li	$v0, 0
	bne	$v0, $zero, $L15_lorexp_end


	# param  2
	li	$a0, 2
	addi	$sp, $sp, -4
	sw	$a0, -36($fp)

	# %10 = call: i32  side_effect
	addi	$sp, $sp, -4
	sw	$ra, 0($sp)
	jal	side_effect

	lw	$ra, 0($sp)
	addi	$sp, $sp, -4
	sw	$v0, -44($fp)
	addi	$sp, $fp, -32

	# if %10 goto  $L15_lorexp_end
	lw	$v0, -44($fp)
	bne	$v0, $zero, $L15_lorexp_end


	# %9: i32 = 0
	li	$v0, 0
	sw	$v0, -32($fp)

	# goto  $L15_lorexp_end
	j	$L15_lorexp_end


	# $L15_lorexp_end:
$L15_lorexp_end:

	# if false %9 goto  $L14_if_end
	lw	$v0, -32($fp)
	beq	$v0, $zero, $L14_if_end


	# $L14_if_end:
$L14_if_end:

	# param  70
	li	$a0, 70
	addi	$sp, $sp, -1
	sb	$a0, -33($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -32

	# param  76
	li	$a0, 76
	addi	$sp, $sp, -1
	sb	$a0, -33($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -32

	# param  65
	li	$a0, 65
	addi	$sp, $sp, -1
	sb	$a0, -33($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -32

	# param  71
	li	$a0, 71
	addi	$sp, $sp, -1
	sb	$a0, -33($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -32

	# param  52
	li	$a0, 52
	addi	$sp, $sp, -1
	sb	$a0, -33($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -32

	# param  10
	li	$a0, 10
	addi	$sp, $sp, -1
	sb	$a0, -33($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -32

	# %11: i32 = 1
	li	$v0, 1
	addi	$sp, $sp, -4
	sw	$v0, -36($fp)

	# if 1 goto  $L17_lorexp_end
	li	$v0, 1
	bne	$v0, $zero, $L17_lorexp_end


	# param  3
	li	$a0, 3
	addi	$sp, $sp, -4
	sw	$a0, -40($fp)

	# %12 = call: i32  side_effect
	addi	$sp, $sp, -4
	sw	$ra, 0($sp)
	jal	side_effect

	lw	$ra, 0($sp)
	addi	$sp, $sp, -4
	sw	$v0, -48($fp)
	addi	$sp, $fp, -36

	# if %12 goto  $L17_lorexp_end
	lw	$v0, -48($fp)
	bne	$v0, $zero, $L17_lorexp_end


	# %11: i32 = 0
	li	$v0, 0
	sw	$v0, -36($fp)

	# goto  $L17_lorexp_end
	j	$L17_lorexp_end


	# $L17_lorexp_end:
$L17_lorexp_end:

	# if false %11 goto  $L16_if_end
	lw	$v0, -36($fp)
	beq	$v0, $zero, $L16_if_end


	# $L16_if_end:
$L16_if_end:

	# param  70
	li	$a0, 70
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  76
	li	$a0, 76
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  65
	li	$a0, 65
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  71
	li	$a0, 71
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  53
	li	$a0, 53
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  10
	li	$a0, 10
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  101
	li	$a0, 101
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  114
	li	$a0, 114
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  114
	li	$a0, 114
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  32
	li	$a0, 32
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  99
	li	$a0, 99
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  97
	li	$a0, 97
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  117
	li	$a0, 117
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  103
	li	$a0, 103
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  104
	li	$a0, 104
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  116
	li	$a0, 116
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  58
	li	$a0, 58
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# param  32
	li	$a0, 32
	addi	$sp, $sp, -1
	sb	$a0, -37($fp)

	# call: void  putchar
	addi	$sp, $sp, -7
	sw	$ra, 0($sp)
	jal	putchar

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# call: void  oerr
	addi	$sp, $sp, -4
	sw	$ra, 0($sp)
	jal	oerr

	lw	$ra, 0($sp)
	addi	$sp, $fp, -36

	# ret: i32  0
	li	$v0, 0
	move	$sp, $fp
	lw	$fp, -4($sp)
	jr	$ra

